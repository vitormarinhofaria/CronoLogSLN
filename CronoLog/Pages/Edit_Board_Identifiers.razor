@page "/board/{boardId}/{memberId}/identifiers/"
@using MongoDB.Driver;
@inject NavigationManager Navigation

<div class="cColumn cBackground" id="containerMain">
    <div class="cColumn justify-content-center align-items-center redContainer">
        <div class="cRow justify-content-between pr-4 pl-4 pt-3 pb-3 w-100">
            <span class="oi oi-home hoverable" @onclick='(e) => Navigation.NavigateTo("/")'></span>
            <h2 class="text-center">Identificadores do Quadro - @Board?.Name</h2>
            <div class="cRow justify-content-center align-items-center p-0 m-0">
                <div class="cRow justify-content-center align-items-center pr-3">
                    <span class="bi bi-arrow-left-circle" @onclick=BackToBoard></span>
                </div>
            </div>
        </div>
    </div>
    <div class="cRow justify-content-center">
        <div class="cColumn justify-content-center align-items-center mt-3 p-4 input-group nRaisedBackground" style="width: max-content;">
            @if (Board is not null)
            {
                <div class="cColumn justify-content-center align-items-center pb-2">
                    <label>Desenho</label>
                    <input class="input-group-text" @bind-value="@Board!.Identifiers!.Desenho" @bind-value:event="oninput"/>
                </div>
                <div class="cColumn justify-content-center align-items-center pb-2">
                    <label>Tensão</label>
                    <input class="input-group-text" @bind-value="@Board!.Identifiers!.Tensao" @bind-value:event="oninput" />
                    
                </div>
                <div class="cColumn justify-content-center align-items-center pb-2">
                    <label>Circuito</label>
                    <input class="input-group-text" @bind-value="@Board!.Identifiers!.Circuito" @bind-value:event="oninput" />
                    
                </div>
                <div class="cColumn justify-content-center align-items-center pb-2">
                    <label>Cabeça</label>
                    <input class="input-group-text" @bind-value="@Board!.Identifiers!.Cabeca" @bind-value:event="oninput" />
                    
                </div>
                <div class="cColumn justify-content-center align-items-center pb-2">
                    <label>Suporte</label>
                    <input class="input-group-text" @bind-value="@Board!.Identifiers!.Suporte" @bind-value:event="oninput" />
                    
                </div>
                <div class="cRow p-2 pt-3 justify-content-around w-100">            
                    <button class="btn nBtnDanger ml-2 mr-2" @onclick=BackToBoard>
                        <i class="bi bi-x-lg"></i>
                    </button>
                    <button class="btn nBtnSave ml-2 mr-2" @onclick=SaveModified>
                        <i class="bi bi-check-lg"></i>
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string? BoardId { get; set; }
    [Parameter]
    public string? MemberId { get; set; }
    [Inject]
    public IMongoClient DbClient { get; set; }

    private TrelloBoard? Board { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var boardFilter = Builders<TrelloBoard>.Filter.Eq("Id", BoardId);
        var board = await DatabaseUtils.BoardsCollection(DbClient).Find(boardFilter).FirstOrDefaultAsync();
        Board = board;
        if (Board is not null)
        {
            if(Board.Identifiers is null)
            {
                Board.Identifiers = new();
            }
        }
    }

    private async Task SaveModified()
    {
        var boardFilter = Builders<TrelloBoard>.Filter.Eq(nameof(TrelloBoard.Id), Board!.Id);
        var updateIdentifiers = Builders<TrelloBoard>.Update.Set(nameof(TrelloBoard.Identifiers), Board.Identifiers);
        var result = await DatabaseUtils.BoardsCollection(DbClient).FindOneAndUpdateAsync(boardFilter, updateIdentifiers);
        Console.WriteLine(Board!.Identifiers!.Desenho);
        Navigation.NavigateTo($"/board/{BoardId}/{MemberId}");
    }
    private void BackToBoard(){
        Navigation.NavigateTo($"/board/{BoardId}/{MemberId}");
    }
}
